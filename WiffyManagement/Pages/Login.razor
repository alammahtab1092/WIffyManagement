@page "/login"
@using WiffyManagement.Authentication
@inject UserAccountService userAccountService
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navigationManager

<h3>Login</h3>

<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
        <div class="mb-3 text-center">
            <h3>Login</h3>
        </div>
        <div class="mb-3">
            <label>User Name</label>
            <input class="form-control" placeholder="User Name" />
        </div>
        <div class="mb-3">
            <label>Password</label>
            <input type="password" class="form-control" placeholder="User Name" />
        </div>
        <div class="mb-3 d-grid gap-2">
            <button class="btn accordion-body btn-primary">Login</button>
        </div>
    </div>
</div>

@code {
    private class Model
    {
        //public string UserName { get; set; }
        //public string Password { get; set; }

        //private Model model = new Model();
        //public async Task AuthenticateUser()
        //{
        //    var userAccount = userAccountService.GetByUserName(model.UserName);
        //    if(userAccount == null || userAccount.Password != model.Password)
        //    {
        //        await js.InvokeVoidAsync("alert", "Invalid UserName or Password");
        //        return;
        //    }
            
        //    var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        //}
    }
}
